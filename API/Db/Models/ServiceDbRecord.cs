// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("service")]
	public class ServiceDbRecord
	{
		[Column("serverid"         , IsPrimaryKey = true, PrimaryKeyOrder = 0)] public int      ServerId          { get; set; } // integer
		[Column("serviceid"        , IsPrimaryKey = true, PrimaryKeyOrder = 1)] public int      ServiceId         { get; set; } // integer
		[Column("date"             , IsPrimaryKey = true, PrimaryKeyOrder = 2)] public DateTime Date              { get; set; } // timestamp (6) without time zone
		[Column("interval"                                                   )] public int      Interval          { get; set; } // integer
		[Column("ramusagemegabytes"                                          )] public int?     RamUsageMb { get; set; } // integer
		[Column("statusid"                                                   )] public int?     StatusId          { get; set; } // integer
		[Column("tasks"                                                      )] public int?     Tasks             { get; set; } // integer
		[Column("cpuseconds"                                                 )] public decimal? CpuSeconds        { get; set; } // numeric

		#region Associations
		/// <summary>
		/// service_serviceid_fkey
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(ServiceId), OtherKey = nameof(ServicenameDbRecord.ServiceId))]
		public ServicenameDbRecord Serviceidfkey { get; set; } = null!;

		/// <summary>
		/// service_statusid_fkey
		/// </summary>
		[Association(ThisKey = nameof(StatusId), OtherKey = nameof(ServicestatusDbRecord.StatusId))]
		public ServicestatusDbRecord? Status { get; set; }
		#endregion
	}
}
