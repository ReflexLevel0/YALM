// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using YALM.Common.Models;
using YALM.Common.Models.Graphql.Logs;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("partitionlog")]
	public class PartitionLogDbRecord : ILog, IConvertible
	{
		[Column("serverid"     , IsPrimaryKey = true , PrimaryKeyOrder = 0                        )] public int      Serverid      { get; set; } // integer
		[Column("partitionuuid", CanBeNull    = false, IsPrimaryKey    = true, PrimaryKeyOrder = 1)] public string   Partitionuuid { get; set; } = null!; // character varying(64)
		[Column("date"         , IsPrimaryKey = true , PrimaryKeyOrder = 2                        )] public DateTime Date          { get; set; } // timestamp (6) without time zone
		[Column("interval"                                                                        )] public int      Interval      { get; set; } // integer
		[Column("bytestotal"                                                                      )] public long?    BytesTotal    { get; set; } // bigint
		[Column("usage"                                                                           )] public decimal? Usage         { get; set; } // numeric(3,2)

		#region Associations
		/// <summary>
		/// partitionlog_serverid_partitionuuid_fkey
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(Serverid) + "," + nameof(Partitionuuid), OtherKey = nameof(PartitionLogDbRecord.Serverid) + "," + nameof(PartitionLogDbRecord.Partitionuuid))]
		public PartitionLogDbRecord Serveridpartitionuuidfkey { get; set; } = null!;
		#endregion

		public TypeCode GetTypeCode()
		{
			throw new NotImplementedException();
		}

		public bool ToBoolean(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public byte ToByte(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public char ToChar(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public DateTime ToDateTime(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public decimal ToDecimal(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public double ToDouble(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public short ToInt16(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public int ToInt32(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public long ToInt64(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public sbyte ToSByte(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public float ToSingle(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public string ToString(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public object ToType(Type conversionType, IFormatProvider? provider)
		{
			if(conversionType != typeof(PartitionLog)) throw new NotImplementedException();
			return new PartitionLog()
			{
				Date = Date,
				UsedPercentage = Usage,
				Bytes = BytesTotal
			};
		}

		public ushort ToUInt16(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public uint ToUInt32(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}

		public ulong ToUInt64(IFormatProvider? provider)
		{
			throw new NotImplementedException();
		}
	}
}
