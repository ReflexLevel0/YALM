// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("partition")]
	public class PartitionDbRecord
	{
		[Column("diskid"           , IsPrimaryKey = true , PrimaryKeyOrder = 0   , IsIdentity      = true, SkipOnInsert = true, SkipOnUpdate = true)] public int     DiskId            { get; set; } // integer
		[Column("uuid"             , CanBeNull    = false, IsPrimaryKey    = true, PrimaryKeyOrder = 1                                             )] public string  Uuid              { get; set; } = null!; // character varying(64)
		[Column("filesystemname"                                                                                                                   )] public string? FilesystemName    { get; set; } // character varying(64)
		[Column("filesystemversion"                                                                                                                )] public string? FilesystemVersion { get; set; } // character varying(64)
		[Column("label"                                                                                                                            )] public string? Label             { get; set; } // character varying(256)
		[Column("mountpath"                                                                                                                        )] public string? MountPath         { get; set; } // character varying(1024)

		#region Associations
		/// <summary>
		/// partition_diskid_fkey
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(DiskId), OtherKey = nameof(DiskDbRecord.Id))]
		public DiskDbRecord Diskidfkey { get; set; } = null!;

		/// <summary>
		/// partitionlog_diskid_uuid_fkey backreference
		/// </summary>
		[Association(ThisKey = nameof(DiskId) + "," + nameof(Uuid), OtherKey = nameof(PartitionLogDbRecord.DiskId) + "," + nameof(PartitionLogDbRecord.Uuid))]
		public IEnumerable<PartitionLogDbRecord> Partitionlogs { get; set; } = null!;
		#endregion
	}
}
